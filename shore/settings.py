"""
Django settings for shore project.
Generated by 'django-admin startproject' using Django 1.11.
For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/
For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import environ
import datetime

from configurations import Configuration, values
from django.utils.translation import ugettext_lazy as _


env = environ.Env(DEBUG=(bool, False),)
BASE_DIR = environ.Path(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
PROJECT_ROOT = environ.Path(os.path.dirname(os.path.abspath(__file__)))
GEOIP_PATH = BASE_DIR('geoip2')
environ.Env.read_env('environ.env')


class Base(Configuration):
    DEBUG = values.BooleanValue(True)
    # Quick-start development settings - unsuitable for production
    # See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

    # SECURITY WARNING: keep the secret key used in production secret!
    SECRET_KEY = env('SECRET_KEY')

    # SECURITY WARNING: don't run with debug turned on in production!

    ALLOWED_HOSTS = ['*']

    # Application definition

    INSTALLED_APPS = [
        'main',
        'django.contrib.admin',
        'django.contrib.auth',
        'django.contrib.contenttypes',
        'django.contrib.sessions',
        'django.contrib.messages',
        'django.contrib.staticfiles',
        'webpack_loader',
        'django_otp',
        'django_otp.plugins.otp_static',
        'django_otp.plugins.otp_totp',
        'django.contrib.humanize',
        'two_factor',
        'rest_framework',
        'pankow',
        'anymail',
    ]

    MIDDLEWARE = [
        'django.middleware.security.SecurityMiddleware',
        'django.contrib.sessions.middleware.SessionMiddleware',
        'django.middleware.locale.LocaleMiddleware',
        'django.middleware.common.CommonMiddleware',
        'django.middleware.csrf.CsrfViewMiddleware',
        'django.contrib.auth.middleware.AuthenticationMiddleware',
        'django_otp.middleware.OTPMiddleware',
        'two_factor.middleware.threadlocals.ThreadLocals',
        'django.contrib.messages.middleware.MessageMiddleware',
        'django.middleware.clickjacking.XFrameOptionsMiddleware',
    ]

    ROOT_URLCONF = 'shore.urls'

    TEMPLATES = [
        {
            'BACKEND': 'django.template.backends.django.DjangoTemplates',
            'DIRS': [
                'templates/',
                'main/templates/'
            ],
            'APP_DIRS': True,
            'OPTIONS': {
                'context_processors': [
                    'django.template.context_processors.debug',
                    'django.template.context_processors.request',
                    'django.contrib.auth.context_processors.auth',
                    'django.contrib.messages.context_processors.messages',
                    'django.template.context_processors.i18n',
                ],
            },
        },
    ]

    WSGI_APPLICATION = 'shore.wsgi.application'

    # Database
    # https://docs.djangoproject.com/en/1.11/ref/settings/#databases
    DATABASES = {
        'default': {
            'ENGINE': env('DATABASE_ENGINE', default='django.db.backends.postgresql'),
            'NAME': env('DATABASE_NAME', default=''),
            'USER': env('DATABASE_USERNAME', default=''),
            'PASSWORD': env('DATABASE_PASSWORD', default=''),
            'HOST': env('DATABASE_HOST', default=''),
            'PORT': env('DATABASE_PORT', default='')
        }
    }

    # Password validation
    # https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators
    AUTH_PASSWORD_VALIDATORS = [
        {
            'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
        },
        {
            'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        },
        {
            'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
        },
        {
            'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
        },
    ]

    REST_FRAMEWORK = {
        'DEFAULT_PERMISSION_CLASSES': (
            'rest_framework.permissions.IsAuthenticated',
        ),
        'DEFAULT_AUTHENTICATION_CLASSES': (
            'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
            'rest_framework.authentication.SessionAuthentication',
            'rest_framework.authentication.BasicAuthentication',
        ),
    }

    JWT_AUTH = {
        'JWT_ENCODE_HANDLER':
            'rest_framework_jwt.utils.jwt_encode_handler',

        'JWT_DECODE_HANDLER':
            'rest_framework_jwt.utils.jwt_decode_handler',

        'JWT_PAYLOAD_HANDLER':
            'rest_framework_jwt.utils.jwt_payload_handler',

        'JWT_PAYLOAD_GET_USER_ID_HANDLER':
            'rest_framework_jwt.utils.jwt_get_user_id_from_payload_handler',

        'JWT_RESPONSE_PAYLOAD_HANDLER':
            'rest_framework_jwt.utils.jwt_response_payload_handler',

        'JWT_SECRET_KEY': env('JWT_SECRET_KEY'),
        'JWT_ALGORITHM': 'HS256',
        'JWT_VERIFY': True,
        'JWT_VERIFY_EXPIRATION': True,
        'JWT_LEEWAY': 0,
        'JWT_EXPIRATION_DELTA': datetime.timedelta(days=1),

        'JWT_ALLOW_REFRESH': True,
        'JWT_REFRESH_EXPIRATION_DELTA': datetime.timedelta(days=7),

        'JWT_AUTH_HEADER_PREFIX': 'JWT',

    }


    # Internationalization
    # https://docs.djangoproject.com/en/1.11/topics/i18n/
    LANGUAGE_CODE = 'en-us'
    TIME_ZONE = 'UTC'
    USE_I18N = True
    USE_L10N = True
    USE_TZ = True

    LANGUAGES = (
        ('en', _('English')),
        ('fr', _('French')),
        ('uk', _('Ukrainian')),
    )

    LOCALE_PATHS = (
        BASE_DIR('locale'),
    )

    # Static files (CSS, JavaScript, Images)
    # https://docs.djangoproject.com/en/1.11/howto/static-files/
    STATIC_ROOT = PROJECT_ROOT('staticfiles')
    STATIC_URL = '/static/'

    # Extra places for collectstatic to find static files.
    STATICFILES_DIRS = [
        PROJECT_ROOT('static'),
        BASE_DIR('two_factor/templates/two_factor/static'),
        BASE_DIR('assets'),
    ]

    TWO_FACTOR_SMS_GATEWAY = env('TWO_FACTOR_SMS_GATEWAY')
    TWILIO_ACCOUNT_SID = env('TWILIO_ACCOUNT_SID')
    TWILIO_AUTH_TOKEN = env('TWILIO_AUTH_TOKEN')
    TWILIO_CALLER_ID = env('TWILIO_CALLER_ID')

    EMAIL_BACKEND = env('EMAIL_BACKEND')
    DEFAULT_FROM_EMAIL = env('DEFAULT_FROM_EMAIL')

    ANYMAIL = {
        "MAILGUN_API_KEY": env('MAILGUN_API_KEY'),
        "MAILGUN_SENDER_DOMAIN": env('MAILGUN_SENDER_DOMAIN'),
    }

    AUTH_USER_MODEL = 'main.User'
    LOGIN_URL = '/login'
    LOGIN_REDIRECT_URL = '/'
    SEND_LOGIN_CHECK_EMAIL = False


class Prod(Base):
    DEBUG = values.BooleanValue(False)
    WEBPACK_LOADER = {
        'DEFAULT': {
            'CACHE': False,
            'BUNDLE_DIR_NAME': '/dist/prod/',
            'POLL_INTERVAL': 0.1,
            'TIMEOUT': None,
            'IGNORE': ['.+\.hot-update.js', '.+\.map']
        }
    }

    DATABASES = {
        'default': {
            'ENGINE': env('DATABASE_ENGINE', default='django.db.backends.postgresql'),
            'NAME': env('DATABASE_NAME', default=''),
            'USER': env('DATABASE_USERNAME', default=''),
            'PASSWORD': env('DATABASE_PASSWORD', default=''),
            'HOST': env('DATABASE_HOST', default=''),
            'PORT': env('DATABASE_PORT', default='')
        }
    }

    # Check security.md for explanation of below settings
    SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
    SECURE_SSL_REDIRECT = True
    CSRF_COOKIE_SECURE = True
    SESSION_COOKIE_SECURE = True
    # Once you confirm that all assets are served securely (i.e. HSTS didnâ€™t break anything),
    # Change this to 31536000 (1 year)
    SECURE_HSTS_SECONDS = 3600
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_PRELOAD = True


class Dev(Base):
    WEBPACK_LOADER = {
        'DEFAULT': {
            'CACHE': False,
            'BUNDLE_DIR_NAME': '/dist/',
            'POLL_INTERVAL': 0.1,
            'TIMEOUT': None,
            'IGNORE': ['.+\.hot-update.js', '.+\.map']
        }
    }
